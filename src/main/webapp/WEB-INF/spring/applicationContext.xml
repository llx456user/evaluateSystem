<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:context="http://www.springframework.org/schema/context"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<import resource="quartzJobBeans.xml"/>
	
	<bean id="jobExecutor"
        class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="4" />
        <property name="maxPoolSize" value="5" />
        <property name="queueCapacity" value="10" />
    </bean>
	
    <!-- enable component scanning -->
    <context:component-scan base-package="com.tf.base,com.tf.permission" >
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
	
	<context:property-placeholder location="classpath:application.properties" />  
	  
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
	    <property name="driverClassName" value="${jdbc.driverClassName}" />  
	    <property name="url" value="${jdbc.url}" />  
	</bean> 

	<!-- transactionManager -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
       <property name="dataSource" ref="dataSource"/>
    </bean>
    
	  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
	    <property name="dataSource" ref="dataSource" />
		<!-- 分页插件设置 -->
		<property name="plugins">
		   <array>
			 <bean class="com.github.pagehelper.PageHelper">
			   <property name="properties" value="classpath:application.properties"/> 
			 </bean>
			 <!-- SQL异常拦截器 -->
			 <bean class="com.tf.base.common.interceptor.SqlExceptionInterceptor"></bean>
		   </array>
		</property>
       	
	</bean>
	
    <!-- 通用Mapper -->
	<bean id="mapperScanner" class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
	    <property name="basePackage" value="com.tf.base.*.persistence"/>
	    <property name="properties">
	        <value>
	            mappers=tk.mybatis.mapper.common.Mapper,tk.mybatis.mapper.common.special.InsertListMapper
	        </value>
	    </property>
	    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
    
    <!-- enable autowire -->
    <context:annotation-config />

    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven/>

    <!-- enable aspectj -->
    <aop:aspectj-autoproxy />
</beans>
